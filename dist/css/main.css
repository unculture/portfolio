/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

* {
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box; }

html {
  font-size: 16px; }

body {
  background-color: black;
  background-size: cover;
  min-height: 100vh;
  font-weight: 400;
  font-family: "Open Sans", Times New Roman, serif;
  position: relative; }

strong {
  font-weight: 600; }

h1, h2, h3, h4 {
  font-weight: 700;
  font-family: "Roboto Slab", serif; }

a {
  color: #FF9800;
  text-decoration: none; }
  a:visited {
    color: #FF9800; }

.l-navigational-sidebar {
  position: fixed;
  z-index: 3;
  top: 0;
  left: 5vw;
  width: 20vw; }

.l-container {
  width: 75vw;
  margin-left: 25vw;
  z-index: 2;
  position: relative;
  overflow: hidden; }

.l-content-column {
  max-width: 600px; }

@media (min-width: 400px) {
  .l-navigational-sidebar {
    width: 80px; }
  .l-container {
    width: -webkit-calc(95vw - 80px);
    width: calc(95vw - 80px);
    margin-left: -webkit-calc(80px + 5vw);
    margin-left: calc(80px + 5vw); } }

.main-navigation {
  position: relative;
  z-index: 3;
  margin-top: 1rem;
  display: none;
  text-align: left; }
  .main-navigation:hover, .main-navigation.is-active {
    display: block; }
  @media (max-height: 558px) {
    .main-navigation {
      width: 100vw; } }

.main-navigation__list, .main-navigation__service-list {
  padding: 0;
  margin: 0;
  list-style-type: none; }

.main-navigation__list {
  margin-bottom: 1rem; }

.main-navigation__list-item {
  display: inline-block;
  margin-right: 1rem;
  margin-bottom: 0.5rem;
  background-color: #009688;
  -webkit-transition: background-color 0.2s ease-in-out;
       -o-transition: background-color 0.2s ease-in-out;
          transition: background-color 0.2s ease-in-out;
  -webkit-box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24);
          box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24); }
  .main-navigation__list-item:hover {
    background-color: #00796B; }

.main-navigation__list-link {
  color: #FFFFFF;
  text-decoration: none;
  text-transform: uppercase; }
  .main-navigation__list-link:visited {
    color: #FFFFFF; }

.main-navigation__service-list-item {
  display: inline-block;
  margin-right: 1rem;
  margin-bottom: 0.5rem;
  background-color: #FF9800;
  -webkit-transition: background-color 0.2s ease-in-out;
       -o-transition: background-color 0.2s ease-in-out;
          transition: background-color 0.2s ease-in-out;
  -webkit-box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24);
          box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24); }
  .main-navigation__service-list-item:visited {
    color: #FFFFFF; }
  .main-navigation__service-list-item:hover {
    background-color: #e68900; }

.main-navigation__service-link {
  color: #FFFFFF;
  text-decoration: none; }
  .main-navigation__service-link:visited {
    color: #FFFFFF; }

.main-navigation__service-link, .main-navigation__list-link {
  display: inline-block;
  padding: 0.5rem 1rem; }

.logo {
  width: 20vw;
  height: 20vw;
  margin-top: 1rem;
  margin-bottom: 1rem;
  background-color: #FF9800;
  text-align: center;
  z-index: 2;
  -webkit-box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24);
          box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24); }

.logo__link {
  text-decoration: none;
  color: #FFFFFF;
  font-size: 10vw;
  line-height: 20vw;
  vertical-align: text-bottom;
  font-family: "Roboto Slab", serif;
  font-weight: 700; }
  .logo__link:visited {
    color: #FFFFFF; }

@media (min-width: 400px) {
  .logo {
    width: 80px;
    height: 80px; }
  .logo__link {
    font-size: 40px;
    line-height: 80px; } }

.cards {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
     -moz-box-orient: horizontal;
     -moz-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
     -moz-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-align-content: flex-start;
      -ms-flex-line-pack: start;
          align-content: flex-start;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
     -moz-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start; }

.card {
  margin: 1rem;
  -webkit-border-radius: 2px;
          border-radius: 2px;
  background-color: #FFFFFF;
  -webkit-box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24);
          box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24); }

.card__image {
  width: 100%;
  max-width: 100%;
  height: auto; }

.card__heading {
  margin-top: 1rem;
  margin-bottom: 0;
  font-size: 1.2rem; }

.card__subheading {
  margin-top: 0;
  margin-bottom: 0;
  font-size: 1.2rem;
  font-style: italic;
  color: #727272; }
  .card__subheading a, .card__subheading a:visited {
    color: #727272;
    text-decoration: none; }

.card__textual-content {
  padding: 0 1rem 1rem 1rem; }

@media (min-width: 600px) {
  .card {
    margin: 1rem 0 1rem 1rem;
    width: -webkit-calc(50% - 2rem);
    width: calc(50% - 2rem); } }

@media (min-width: 1000px) {
  .card {
    width: -webkit-calc(33.333333% - 2rem);
    width: calc(33.333333% - 2rem); } }

@media (min-width: 1800px) {
  .card {
    width: -webkit-calc(20% - 2rem);
    width: calc(20% - 2rem); } }

.buzzwords {
  border-top: 1px solid #B6B6B6;
  padding: 0.5rem 0 0 0;
  margin: 0;
  margin-top: 0.5rem;
  list-style-type: none; }

.buzzwords__word {
  display: inline-block;
  color: #FFFFFF;
  background-color: #009688;
  -webkit-border-radius: 3px;
          border-radius: 3px;
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  margin: 0.25rem 0.2rem; }

.button {
  display: inline-block;
  color: #FFFFFF;
  background-color: #FF9800;
  -webkit-border-radius: 3px;
          border-radius: 3px;
  font-size: 1rem;
  padding: 0.25rem 0.5rem;
  margin: 0.25rem 0;
  cursor: pointer;
  -webkit-transition: all 0.2s ease-in-out;
       -o-transition: all 0.2s ease-in-out;
          transition: all 0.2s ease-in-out;
  text-decoration: none; }
  .button:visited {
    color: #FFFFFF; }
  .button:hover {
    background-color: #f59200; }

.bg {
  background: url('/assets/bg-large-landscape.jpg');
  background-size: cover;
  height: 100%;
  width: 150%;
  position: fixed;
  background-position: center center;
  background-repeat: no-repeat; }
  @media (orientation: portrait) {
    .bg {
      background: url('/assets/bg-large-portrait.jpg'); } }

.nav-handle {
  display: block;
  text-decoration: none;
  width: 20vw;
  height: 20vw;
  -webkit-border-radius: 10vw;
          border-radius: 10vw;
  color: #FFFFFF;
  background-color: #009688;
  font-size: 3vw;
  font-family: "Roboto Slab", serif;
  font-weight: 700;
  line-height: 20vw;
  text-align: center;
  text-transform: uppercase;
  -webkit-transition: background-color 0.2s ease-in-out;
       -o-transition: background-color 0.2s ease-in-out;
          transition: background-color 0.2s ease-in-out;
  -webkit-box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24);
          box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24);
  cursor: pointer; }
  .nav-handle:hover {
    background-color: #00796B; }

@media (min-width: 400px) {
  .nav-handle {
    width: 80px;
    height: 80px;
    line-height: 80px;
    font-size: 12px; } }

.article {
  margin: 1rem;
  -webkit-border-radius: 2px;
          border-radius: 2px;
  background-color: #FFFFFF;
  -webkit-box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24);
          box-shadow: 0px 1px 1.5px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.24); }

.article__header {
  position: relative; }

.article__headings {
  max-width: 100%; }

.article__heading {
  padding: 0.5rem 1rem;
  background-color: #009688;
  display: block;
  color: #FFFFFF;
  word-wrap: break-word;
  margin: 0; }
  .article__heading a {
    color: #FFFFFF; }
    .article__heading a:visited {
      color: #FFFFFF; }

.article__standfirst {
  padding: 0.5rem 1rem;
  background-color: #FF9800;
  display: block;
  color: #FFFFFF;
  margin: 0; }
  .article__standfirst a, .article__standfirst a:visited {
    color: #FFFFFF;
    text-decoration: none;
    font-weight: 600; }

.article__header-image {
  width: 100%;
  max-width: 100%;
  height: auto;
  display: block; }

.article__content {
  padding: 0 1rem 1rem 1rem; }

@media (min-width: 420px) {
  .article__headings {
    position: absolute;
    bottom: 0;
    left: 0; }
  .article__heading, .article__standfirst {
    display: inline-block; } }


/*# sourceMappingURL=data:application/json;base64, */
